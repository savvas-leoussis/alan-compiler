hello () : proc
    Counter : int[5];
    guard : byte;
    n1 : int;

    toUse (n : byte) : byte

    { -- toUse
        return n;
    }

    toUse2 (n :  int, n2: int, n3 :int) : byte

    { -- toUse
        return '0';
    }


{
     writeString("Hello World\n");

    -- EVERYTHING HERE SHOULD WORK:
       Counter[1] = 5;
       n1 = 6 ;
       Counter[0] = n1 ;
       Counter[1] = 3 % 5 ;    -- Should work
       Counter[2] = n1 % 5 ;    -- Should work
       --guard = toUse2(n1);
       guard = 'a';       -- byte to byte



     -- PROBLEMS WE HAVE:
     toUse2(1, 2) ;           -- calling a proc   without a proper arguement for some reason succeeds
    -- toUse(n1) ;         -- calling a function that has non-void return for some reason succeeds


    --These are the errors we can catch up to now
  --  guard = 256;     --  trying to assign int to byte!
    -- Counter = 5 + 5;     -- Table as var
    -- Counter[0] = "ermis";
    -- Counter[0] = "kimonas" + 5;
    -- Counter[1] = 1 + guard;  -- Int + Byte
    -- Counter[1] = Counter + 2;   -- Works from both sides
    --   guard[3] =  2;   -- Works from both sides
    -- Counter = Counter  ;    -- this should fail in the eq part
    -- guard = 3 + 5 ;      -- THIS IS A PROBLEM, THIS SHOULD BE VIABLE
    -- "kimonas" = 5;
    -- ermis = 5;
    --guard = toUse(34) ;    -- using a non-lvalue as reference
    -- guard = toUse(n1) ;         -- type missmatch in asignment
  --  guard = 'k' + 5;
	--n1 = 'k';
	--if (5 == 5){};
}
